// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pomodoro.DataAccess.EF;

#nullable disable

namespace Pomodoro.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.Completed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActualDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<float>("PomodorosCount")
                        .HasColumnType("real");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<float>("TimeSpent")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("CompletedTasks");
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.Frequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short>("Every")
                        .HasColumnType("smallint");

                    b.Property<int>("FrequencyTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyTypeId");

                    b.ToTable("Frequencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Every = (short)0,
                            FrequencyTypeId = 1,
                            IsCustom = false
                        },
                        new
                        {
                            Id = 2,
                            Every = (short)1,
                            FrequencyTypeId = 2,
                            IsCustom = false
                        },
                        new
                        {
                            Id = 3,
                            Every = (short)1,
                            FrequencyTypeId = 3,
                            IsCustom = false
                        },
                        new
                        {
                            Id = 4,
                            Every = (short)1,
                            FrequencyTypeId = 4,
                            IsCustom = false
                        },
                        new
                        {
                            Id = 5,
                            Every = (short)1,
                            FrequencyTypeId = 5,
                            IsCustom = false
                        },
                        new
                        {
                            Id = 6,
                            Every = (short)1,
                            FrequencyTypeId = 6,
                            IsCustom = false
                        },
                        new
                        {
                            Id = 7,
                            Every = (short)1,
                            FrequencyTypeId = 7,
                            IsCustom = false
                        });
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.FrequencyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.HasKey("Id");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("FrequencyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = "None"
                        },
                        new
                        {
                            Id = 2,
                            Value = "Day"
                        },
                        new
                        {
                            Id = 3,
                            Value = "Week"
                        },
                        new
                        {
                            Id = 4,
                            Value = "Month"
                        },
                        new
                        {
                            Id = 5,
                            Value = "Year"
                        },
                        new
                        {
                            Id = 6,
                            Value = "Workday"
                        },
                        new
                        {
                            Id = 7,
                            Value = "Weekend"
                        });
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AutostartEnabled")
                        .HasColumnType("bit");

                    b.Property<byte>("LongBreak")
                        .HasColumnType("tinyint");

                    b.Property<byte>("PomodoroDuration")
                        .HasColumnType("tinyint");

                    b.Property<byte>("PomodorosBeforeLongBreak")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ShortBreak")
                        .HasColumnType("tinyint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short>("AllocatedTime")
                        .HasColumnType("smallint");

                    b.Property<int>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitialDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.Completed", b =>
                {
                    b.HasOne("Pomodoro.DataAccess.Entities.Task", "Task")
                        .WithMany("CompletedTasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.Frequency", b =>
                {
                    b.HasOne("Pomodoro.DataAccess.Entities.FrequencyType", "FrequencyType")
                        .WithMany("Frequencies")
                        .HasForeignKey("FrequencyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FrequencyType");
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.Settings", b =>
                {
                    b.HasOne("Pomodoro.DataAccess.Entities.User", "User")
                        .WithOne("Settings")
                        .HasForeignKey("Pomodoro.DataAccess.Entities.Settings", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.Task", b =>
                {
                    b.HasOne("Pomodoro.DataAccess.Entities.Frequency", "Frequency")
                        .WithMany()
                        .HasForeignKey("FrequencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pomodoro.DataAccess.Entities.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Frequency");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.FrequencyType", b =>
                {
                    b.Navigation("Frequencies");
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.Task", b =>
                {
                    b.Navigation("CompletedTasks");
                });

            modelBuilder.Entity("Pomodoro.DataAccess.Entities.User", b =>
                {
                    b.Navigation("Settings");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
